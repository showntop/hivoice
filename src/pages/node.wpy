<template>
  <view class="goodsList">
    <repeat for="{{voiceList}}" key="index" index="index" item="item">
      <view class="list_box">
        <audio poster="{{item.thumLogo}}" name="{{item.name}}" author="{{item.price}}" src="{{item.source}}" id="myAudio" controls="{{false}}" loop class="goods-info"></audio>
        <navigator class="item_content" url="/pages/goods_detail?id={{item.id}}">
          <view class="goods-info">
            <view class="img-box">

              <image src="../images/icon_play_white_48.png" style="{{playingItem == item.id?'display:none':'display:block'}}" @tap="switchPlayer('play',{{item.id}})" class="img-font"/>
              <image src="../images/icon_stop_white_48.png" style="{{playingItem == item.id?'display:block':'display:none'}}" @tap="switchPlayer('stop',{{item.id}})" class="img-font"/>

              <image src="{{item.thumLogo}}" class="img-back" />
            </view>
            <view class="text-box">
              <view class="goods-title">{{item.name}}</view>
              <view class="goods-price">¥ {{item.price}}</view>
            </view>
          </view>
        </navigator>
      </view>
    </repeat>
  </view>
</template>

<script>
import wepy from 'wepy'

import api from '../api/api'

export default class Node extends wepy.page {
  props = {
    type: 'default'
  }

  data = {
    playingItem: "null",
    voiceList: []
  }

  components = {
  }
  computed = {
  }

  methods = {
    switchPlayer(event, itemId) {
      console.log(event, " ", itemId)
      if (event === "stop") {
        this.stopPlayer(itemId)
        console.log("暂停播放")
      } else {
        this.playPlayer(itemId)
        console.log("播放")
      }
    }
  }
  events = {
  }

  onReady(e) {
    this.audioCtx = wepy.createAudioContext('myAudio')
  }

  onLoad() {
    let that = this
    console.log(that)
    that.fetchVoiceList()
  }

  async fetchVoiceList(currentPage, size) {
    let that = this
    const json = await api.getVoiceList({
      query: {
        page: currentPage || 1,
        size: size || 10
      }
    })
    console.log(json)
    if (json.data.code === 0) {
      that.voiceList = [...that.voiceList, ...json.data.result]

      if (json.data.result.size === 0) { // 暂无数据
        that.is_empty = true
      }
      that.$apply()
    } else {
      // tip.error(json.data.msg)
    }
    that.showLoading = false
  }

  async stopPlayer(itemId) {
    let that = this
    that.playingItem = "null"
    this.audioCtx.pause()
    that.$apply()
  }

  async playPlayer(itemId) {
    let that = this
    that.playingItem = itemId
    this.audioCtx.play()
    console.log("-------", that)
    that.$apply()
  }
}
</script>

<style lang="less">
.goodsList {
  padding-top: 15rpx;
}

.goods-info {
  border-bottom: 1px solid #eee;
  display: flex;
  justify-content: space-between;
  padding: 15rpx 21rpx;
  box-sizing: border-box;
}

.goods-info .img-box {
  width: 175rpx;
  height: 175rpx;
  overflow: hidden;
  margin-right: 20rpx;
  background-color: #d8d8d8;
  position: relative;
}

.goods-info .text-box {
  width: 440rpx;
  position: relative;
}

.goods-info .text-box .goods-title {
  font-size: 32rpx;
  color: #414141;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
  padding: 10rpx 20rpx 5rpx 0;
}

.goods-info .text-box .goods-price {
  font-size: 30rpx;
  color: #ed601b;
  padding-top: 30rpx;
}

.goods-info .img-box .img-back {
  width: 175rpx;
  height: 175rpx;
}

.goods-info .img-box .img-font {
  width: 75rpx; 
  height: 75rpx; 
  position: absolute; 
  top: 50rpx; 
  left: 50rpx;
}

.list_box {
  height: 200rpx;
}

</style>
