<style lang="less">
// .index {
//   position: relative;
// }

.swiper {
  height: 348rpx;
}

.slide-image {
  width: 100%;
  height: 100%;
}

.nav_list {
  color: #404040;
  display: flex;
  font-size: 26rpx;
  justify-content: space-between;
  padding: 17rpx 50rpx;
  navigator {
    text-align: center
  }
  .nav_icon {
    height: 80rpx;
    margin: 0 auto;
    width: 80rpx;
    margin-bottom: 14rpx;
  }
  .nav_text {
    font-size: 26rpx
  }
}

.recorder-dialog {
  display: flex;
  justify-content: center;
  background-color: rgba(0, 0, 0, 0.5);
  width: 100%;
  height: 100%;
  top: 0px;
  position: fixed;

  .recorder {
    margin-top: 30%;
  }
}

</style>

<template>
  <view class="container">

    <swiper class="swiper" indicator-active-color="{{indicatorActiveColor}}" indicator-dots="{{indicatorDots}}" autoplay="true" interval="3000" duration="500" circular="true">
      <block wx:for="{{bannerList}}" wx:key="key">
        <swiper-item>
          <image src="{{item.cover}}" class="slide-image" @tap="goToItem({{item}})" />
        </swiper-item>
      </block>
    </swiper>

    <view class="nav_list">
      <navigator open-type="navigate" url="/pages/node?node_id=1">
        <image src="../images/icon_life_48.png" class="nav_icon"></image>
        <view class="nav_text">生活</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/node?node_id=2">
        <image src="../images/icon_world_48.png" class="nav_icon"></image>
        <view class="nav_text">自然</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/node?node_id=3">
        <image src="../images/icon_animal_48.png" class="nav_icon"></image>
        <view class="nav_text">人物</view>
      </navigator>
      <navigator open-type="navigate" url="/pages/node?node_id=4">
        <image src="../images/icon_laugh_48.png" class="nav_icon"></image>
        <view class="nav_text">搞笑</view>
      </navigator>
    </view>
    <view class="subject_grid">
      <higrid :list.sync="voiceList"></higrid>
      <!--加载更多时动画-->
      <loadmore :show.sync="isLoading" message="正在加载"/>
      <!--暂无数据显示-->
      <placeholder :show.sync="isEmpty" message="暂无发现数据"/>
    </view>
    <view class="recorder-dialog" style="{{showRecorder?'display: block':'display:none'}}">
      <recorder class="recorder" @stoped.user="handleRecord"/>
    </view>
    <charmButton :name.sync="recorderBtnName" @blooming.user="triggerRecord" @shrinking.user="stopRecord"></charmButton>
  </view>
</template>

<script>
  import wepy from 'wepy'

  import api from '../api/api'

  import testMixin from '../mixins/test'
  import Recorder from '../components/recorder'
  import Higrid from '../components/higrid'
  import CharmButton from '../components/charmbutton'
  import Placeholder from '../components/common/placeholder'
  import Loadmore from '../components/common/loadmore'

  export default class Index extends wepy.page {
    config = {
      navigationBarTitleText: '声网，心里有你'
    }

    components = {
      loadmore: Loadmore,
      placeholder: Placeholder,
      higrid: Higrid,
      recorder: Recorder,
      charmButton: CharmButton
    }

    mixins = [testMixin]

    data = {
      isLoading: false,
      isEmpty: false,
      currentPage: 0,
      recorderBtnName: '点我',
      bannerList: [],
      voiceList: [],
      showRecorder: false,
      animationData: {}
    }

    computed = {}

    methods = {
      goToItem(item) {
        if (item.targetUrl && item.targetUrl.length > 0) {
          wepy.navigateTo({
            url: item.targetUrl
          })
        } else {
          wepy.navigateTo({
            url: "/pages/subject?id=" + item.id
          })
        }
      },
      handleRecord(res) {
        this.recorderBtnName = '点我'
        this.showRecorder = false
        this.$invoke('charmButton', 'shrinking', 'someArgs')

        if (res.error) {
          wepy.showToast({title: res.error.errMsg})
          return
        }
        wepy.navigateTo({
          url: "/pages/editor?recordFile=" + res.voiceUrl
        })
      },
      stopRecord(res) {
        if (this.showRecorder) {
          this.recorderBtnName = '点我'
          this.showRecorder = false
          this.$invoke('recorder', 'stopRecord', 'someArgs')
        }
      },
      triggerRecord(res) {
        if (this.showRecorder) {
          return
        }

        wepy.getSetting({
          success(res) {
            if (!res.authSetting['scope.record']) {
              wepy.authorize({
                scope: 'scope.record',
                success: () => {
                  // 用户已经同意小程序使用录音功能，后续调用 wx.startRecord 接口不会弹窗询问
                  // this.startRecord()
                },
                fail: (res) => {
                  console.log(res)
                }
              })
            }
          }
        })
        this.recorderBtnName = '停止'
        this.showRecorder = true
        this.$invoke('recorder', 'startRecord', 'someArgs')
      }
    }

    events = {}

    onPullDownRefresh() {
      this.currentPage = 0
      this.voiceList = []
      this.isEmpty = false
      this.fetchVoiceList()
    }

    onLoad() {
      this.fetchVoiceList()
      this.fetchBannerList()
    }

    onReachBottom() {
      let that = this
      if (that.isEmpty) { // 防止重复加载
        return
      }
      if (that.preventRepeatReuqest) {
        return true
      }

      that.preventRepeatReuqest = true
      that.currentPage++
      that.fetchVoiceList(that.currentPage)
      that.preventRepeatReuqest = false
    }

    async fetchBannerList() {
      const resp = await api.getBannerList({
        query: {type: 'excellent'}
      })
      this.bannerList = resp.topics
      this.$apply()
    }

    async fetchVoiceList(currentPage, size) {
      let that = this
      that.isLoading = true
      const resp = await api.getTopicList({
        query: {
          offset: (currentPage || 0) * (size || 10),
          limit: size || 10
        }
      })
      that.voiceList = [...that.voiceList, ...resp.topics]
      if (resp.topics.length === 0) { // 暂无数据
        that.isEmpty = true
      }
      that.isLoading = false
      that.$apply()
      wepy.stopPullDownRefresh()
    }
  }
</script>
